
#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 object                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This is the config file of a custom object.
# If you add this object correctly to your BiomeConfigs, it will spawn in the world.

# This is the creator of this BO3 object
Author: TrueMalice

# A short description of this BO3 object
Description: No description given

# The BO3 version, don't change this! It can be used by external applications to do a version check.
Version: 3

# The settings mode, WriteAll, WriteWithoutComments or WriteDisable. See WorldConfig.
SettingsMode: WriteDisable


#######################################################################
# +-----------------------------------------------------------------+ #
# |                          Main settings                          | #
# +-----------------------------------------------------------------+ #
#######################################################################

# This needs to be set to true to spawn the object in the Tree and Sapling resources.
Tree: false

# The frequency of the BO3 from 1 to 200. Tries this many times to spawn this BO3 when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Frequency: 1

# The rarity of the BO3 from 0 to 100. Each spawn attempt has rarity% chance to succeed when using the CustomObject(...) resource.
# Ignored by Tree(..), Sapling(..) and CustomStructure(..)
Rarity: 1.0

# If you set this to true, the BO3 will be placed with a random rotation.
RotateRandomly: true

# The spawn height of the BO3 - randomY, highestBlock or highestSolidBlock.
SpawnHeight: highestBlock

# The height limits for the BO3.
MinHeight: 0

MaxHeight: 256

# Objects can have other objects attacthed to it: branches. Branches can also
# have branches attached to it, which can also have branches, etc. This is the
# maximum branch depth for this objects.
MaxBranchDepth: 10

# When spawned with the UseWorld keyword, this BO3 should NOT spawn in the following biomes.
# If you write the BO3 name directly in the BiomeConfigs, this will be ignored.
ExcludedBiomes: QuartzHills,QuartzHillsBorder


#######################################################################
# +-----------------------------------------------------------------+ #
# |                      Source block settings                      | #
# +-----------------------------------------------------------------+ #
#######################################################################

# The block the BO3 should spawn in
SourceBlock: 0

# The maximum percentage of the BO3 that can be outside the SourceBlock.
# The BO3 won't be placed on a location with more blocks outside the SourceBlock than this percentage.
MaxPercentageOutsideSourceBlock: 100

# What to do when a block is about to be placed outside the SourceBlock? (dontPlace, placeAnyway)
OutsideSourceBlock: placeAnyway


#######################################################################
# +-----------------------------------------------------------------+ #
# |                              Blocks                             | #
# +-----------------------------------------------------------------+ #
#######################################################################

# All the blocks used in the BO3 are listed here. Possible blocks:
# Block(x,y,z,id[.data][,nbtfile.nbt)
# RandomBlock(x,y,z,id[:data][,nbtfile.nbt],chance[,id[:data][,nbtfile.nbt],chance[,...]])
# So RandomBlock(0,0,0,CHEST,chest.nbt,50,CHEST,anotherchest.nbt,100) will spawn a chest at
# the BO3 origin, and give it a 50% chance to have the contents of chest.nbt, or, if that
# fails, a 100% percent chance to have the contents of anotherchest.nbt.
Block(-8,0,-5,NETHER_BRICK)
Block(-8,0,4,NETHER_BRICK)
Block(-7,0,-5,NETHER_BRICK)
Block(-7,0,-1,NETHER_BRICK_STAIRS)
Block(-7,0,0,NETHER_BRICK_STAIRS)
Block(-7,0,4,NETHER_BRICK)
Block(-6,0,-6,NETHER_BRICK)
Block(-6,0,-5,NETHER_BRICK)
Block(-6,0,-4,NETHER_BRICK)
Block(-6,0,-2,NETHER_BRICK)
Block(-6,0,-1,NETHER_BRICK)
Block(-6,0,0,NETHER_BRICK)
Block(-6,0,1,NETHER_BRICK)
Block(-6,0,3,NETHER_BRICK)
Block(-6,0,4,NETHER_BRICK)
Block(-6,0,5,NETHER_BRICK)
Block(-6,1,-5,NETHER_BRICK)
Block(-6,1,-4,NETHER_BRICK)
Block(-6,1,-2,NETHER_BRICK)
Block(-6,1,-1,NETHER_BRICK_STAIRS)
Block(-6,1,0,NETHER_BRICK_STAIRS)
Block(-6,1,1,NETHER_BRICK)
Block(-6,1,3,NETHER_BRICK)
Block(-6,1,4,NETHER_BRICK)
Block(-6,2,-5,NETHER_BRICK)
Block(-6,2,-4,NETHER_BRICK)
Block(-6,2,3,NETHER_BRICK)
Block(-6,2,4,NETHER_BRICK)
Block(-6,3,-5,NETHER_BRICK_STAIRS)
Block(-6,3,-4,NETHER_BRICK)
Block(-6,3,3,NETHER_BRICK)
Block(-6,3,4,NETHER_BRICK_STAIRS)
Block(-6,4,-4,NETHER_BRICK)
Block(-6,4,3,NETHER_BRICK)
Block(-6,5,-4,NETHER_BRICK_STAIRS)
Block(-6,5,3,NETHER_BRICK_STAIRS)
Block(-5,0,-8,NETHER_BRICK)
Block(-5,0,-7,NETHER_BRICK)
Block(-5,0,-6,NETHER_BRICK)
Block(-5,0,-5,NETHER_BRICK)
Block(-5,0,-4,NETHER_BRICK)
Block(-5,0,-3,NETHER_BRICK)
Block(-5,0,-2,NETHER_BRICK)
Block(-5,0,-1,NETHER_BRICK)
Block(-5,0,0,NETHER_BRICK)
Block(-5,0,1,NETHER_BRICK)
Block(-5,0,2,NETHER_BRICK)
Block(-5,0,3,NETHER_BRICK)
Block(-5,0,4,NETHER_BRICK)
Block(-5,0,5,NETHER_BRICK)
Block(-5,0,6,NETHER_BRICK)
Block(-5,0,7,NETHER_BRICK)
Block(-5,1,-6,NETHER_BRICK)
Block(-5,1,-5,NETHER_BRICK)
Block(-5,1,-4,NETHER_BRICK)
Block(-5,1,-3,NETHER_BRICK)
Block(-5,1,-2,NETHER_BRICK)
Block(-5,1,-1,STAINED_CLAY:14)
Block(-5,1,0,STAINED_CLAY:14)
Block(-5,1,1,NETHER_BRICK)
Block(-5,1,2,NETHER_BRICK)
Block(-5,1,3,NETHER_BRICK)
Block(-5,1,4,NETHER_BRICK)
Block(-5,1,5,NETHER_BRICK)
Block(-5,2,-6,NETHER_BRICK)
Block(-5,2,-5,STAINED_CLAY:1)
Block(-5,2,4,STAINED_CLAY:1)
Block(-5,2,5,NETHER_BRICK)
Block(-5,3,-6,NETHER_BRICK_STAIRS:2)
Block(-5,3,-5,STAINED_CLAY:1)
Block(-5,3,4,STAINED_CLAY:1)
Block(-5,3,5,NETHER_BRICK_STAIRS:3)
Block(-5,4,-5,STAINED_CLAY:1)
Block(-5,4,-4,STEP:13)
Block(-5,4,3,STEP:13)
Block(-5,4,4,STAINED_CLAY:1)
Block(-5,5,-4,NETHER_BRICK)
Block(-5,5,3,NETHER_BRICK)
Block(-5,6,-4,NETHER_BRICK)
Block(-5,6,3,NETHER_BRICK)
Block(-5,7,-4,NETHER_BRICK)
Block(-5,7,3,NETHER_BRICK)
Block(-5,8,-4,NETHER_BRICK_STAIRS)
Block(-5,8,3,NETHER_BRICK_STAIRS)
Block(-4,0,-6,NETHER_BRICK)
Block(-4,0,-5,NETHER_BRICK)
Block(-4,0,-4,NETHER_BRICK)
Block(-4,0,-3,NETHER_BRICK)
Block(-4,0,-2,NETHER_BRICK)
Block(-4,0,-1,NETHER_BRICK)
Block(-4,0,0,NETHER_BRICK)
Block(-4,0,1,NETHER_BRICK)
Block(-4,0,2,NETHER_BRICK)
Block(-4,0,3,NETHER_BRICK)
Block(-4,0,4,NETHER_BRICK)
Block(-4,0,5,NETHER_BRICK)
Block(-4,1,-6,NETHER_BRICK)
Block(-4,1,-5,NETHER_BRICK)
Block(-4,1,-4,NETHER_BRICK)
Block(-4,1,-3,GLOWSTONE)
Block(-4,1,-2,GLOWSTONE)
Block(-4,1,-1,STAINED_CLAY:14)
Block(-4,1,0,STAINED_CLAY:14)
Block(-4,1,1,GLOWSTONE)
Block(-4,1,2,GLOWSTONE)
Block(-4,1,3,NETHER_BRICK)
Block(-4,1,4,NETHER_BRICK)
Block(-4,1,5,NETHER_BRICK)
Block(-4,2,-6,NETHER_BRICK)
Block(-4,2,5,NETHER_BRICK)
Block(-4,3,-6,NETHER_BRICK)
Block(-4,3,5,NETHER_BRICK)
Block(-4,4,-6,NETHER_BRICK)
Block(-4,4,-5,STEP:13)
Block(-4,4,4,STEP:13)
Block(-4,4,5,NETHER_BRICK)
Block(-4,5,-6,NETHER_BRICK_STAIRS:2)
Block(-4,5,-5,NETHER_BRICK)
Block(-4,5,4,NETHER_BRICK)
Block(-4,5,5,NETHER_BRICK_STAIRS:3)
Block(-4,6,-5,NETHER_BRICK)
Block(-4,6,4,NETHER_BRICK)
Block(-4,7,-5,NETHER_BRICK)
Block(-4,7,-4,STEP:13)
Block(-4,7,3,STEP:13)
Block(-4,7,4,NETHER_BRICK)
Block(-4,8,-5,NETHER_BRICK_STAIRS:2)
Block(-4,8,-4,NETHER_BRICK)
Block(-4,8,3,NETHER_BRICK)
Block(-4,8,4,NETHER_BRICK_STAIRS:3)
Block(-4,9,-4,NETHER_BRICK)
Block(-4,9,3,NETHER_BRICK)
Block(-4,10,-4,NETHER_BRICK)
Block(-4,10,3,NETHER_BRICK)
Block(-4,11,-4,STEP:5)
Block(-4,11,3,STEP:5)
Block(-3,0,-5,NETHER_BRICK)
Block(-3,0,-4,NETHER_BRICK)
Block(-3,0,-3,NETHER_BRICK)
Block(-3,0,-2,NETHER_BRICK)
Block(-3,0,-1,NETHER_BRICK)
Block(-3,0,0,NETHER_BRICK)
Block(-3,0,1,NETHER_BRICK)
Block(-3,0,2,NETHER_BRICK)
Block(-3,0,3,NETHER_BRICK)
Block(-3,0,4,NETHER_BRICK)
Block(-3,1,-5,NETHER_BRICK)
Block(-3,1,-4,GLOWSTONE)
Block(-3,1,-3,NETHER_BRICK)
Block(-3,1,-2,NETHER_BRICK)
Block(-3,1,-1,STAINED_CLAY:14)
Block(-3,1,0,STAINED_CLAY:14)
Block(-3,1,1,NETHER_BRICK)
Block(-3,1,2,NETHER_BRICK)
Block(-3,1,3,GLOWSTONE)
Block(-3,1,4,NETHER_BRICK)
Block(-2,0,-6,NETHER_BRICK)
Block(-2,0,-5,NETHER_BRICK)
Block(-2,0,-4,NETHER_BRICK)
Block(-2,0,-3,NETHER_BRICK)
Block(-2,0,-2,NETHER_BRICK)
Block(-2,0,-1,NETHER_BRICK)
Block(-2,0,0,NETHER_BRICK)
Block(-2,0,1,NETHER_BRICK)
Block(-2,0,2,NETHER_BRICK)
Block(-2,0,3,NETHER_BRICK)
Block(-2,0,4,NETHER_BRICK)
Block(-2,0,5,NETHER_BRICK)
Block(-2,1,-6,NETHER_BRICK)
Block(-2,1,-5,NETHER_BRICK)
Block(-2,1,-4,GLOWSTONE)
Block(-2,1,-3,NETHER_BRICK)
Block(-2,1,-2,NETHER_BRICK)
Block(-2,1,-1,STAINED_CLAY:14)
Block(-2,1,0,STAINED_CLAY:14)
Block(-2,1,1,NETHER_BRICK)
Block(-2,1,2,NETHER_BRICK)
Block(-2,1,3,GLOWSTONE)
Block(-2,1,4,NETHER_BRICK)
Block(-2,1,5,NETHER_BRICK)
Block(-1,0,-7,NETHER_BRICK_STAIRS:2)
Block(-1,0,-6,NETHER_BRICK)
Block(-1,0,-5,NETHER_BRICK)
Block(-1,0,-4,NETHER_BRICK)
Block(-1,0,-3,NETHER_BRICK)
Block(-1,0,-2,NETHER_BRICK)
Block(-1,0,-1,NETHER_BRICK)
Block(-1,0,0,NETHER_BRICK)
Block(-1,0,1,NETHER_BRICK)
Block(-1,0,2,NETHER_BRICK)
Block(-1,0,3,NETHER_BRICK)
Block(-1,0,4,NETHER_BRICK)
Block(-1,0,5,NETHER_BRICK)
Block(-1,0,6,NETHER_BRICK_STAIRS:3)
Block(-1,1,-6,NETHER_BRICK_STAIRS:2)
Block(-1,1,-5,STAINED_CLAY:14)
Block(-1,1,-4,STAINED_CLAY:14)
Block(-1,1,-3,STAINED_CLAY:14)
Block(-1,1,-2,STAINED_CLAY:14)
Block(-1,1,-1,STATIONARY_LAVA)
Block(-1,1,0,STATIONARY_LAVA)
Block(-1,1,1,STAINED_CLAY:14)
Block(-1,1,2,STAINED_CLAY:14)
Block(-1,1,3,STAINED_CLAY:14)
Block(-1,1,4,STAINED_CLAY:14)
Block(-1,1,5,NETHER_BRICK_STAIRS:3)
Block(0,0,-7,NETHER_BRICK_STAIRS:2)
Block(0,0,-6,NETHER_BRICK)
Block(0,0,-5,NETHER_BRICK)
Block(0,0,-4,NETHER_BRICK)
Block(0,0,-3,NETHER_BRICK)
Block(0,0,-2,NETHER_BRICK)
Block(0,0,-1,NETHER_BRICK)
Block(0,0,0,NETHER_BRICK)
Block(0,0,1,NETHER_BRICK)
Block(0,0,2,NETHER_BRICK)
Block(0,0,3,NETHER_BRICK)
Block(0,0,4,NETHER_BRICK)
Block(0,0,5,NETHER_BRICK)
Block(0,0,6,NETHER_BRICK_STAIRS:3)
Block(0,1,-6,NETHER_BRICK_STAIRS:2)
Block(0,1,-5,STAINED_CLAY:14)
Block(0,1,-4,STAINED_CLAY:14)
Block(0,1,-3,STAINED_CLAY:14)
Block(0,1,-2,STAINED_CLAY:14)
Block(0,1,-1,STATIONARY_LAVA)
Block(0,1,0,STATIONARY_LAVA)
Block(0,1,1,STAINED_CLAY:14)
Block(0,1,2,STAINED_CLAY:14)
Block(0,1,3,STAINED_CLAY:14)
Block(0,1,4,STAINED_CLAY:14)
Block(0,1,5,NETHER_BRICK_STAIRS:3)
Block(1,0,-6,NETHER_BRICK)
Block(1,0,-5,NETHER_BRICK)
Block(1,0,-4,NETHER_BRICK)
Block(1,0,-3,NETHER_BRICK)
Block(1,0,-2,NETHER_BRICK)
Block(1,0,-1,NETHER_BRICK)
Block(1,0,0,NETHER_BRICK)
Block(1,0,1,NETHER_BRICK)
Block(1,0,2,NETHER_BRICK)
Block(1,0,3,NETHER_BRICK)
Block(1,0,4,NETHER_BRICK)
Block(1,0,5,NETHER_BRICK)
Block(1,1,-6,NETHER_BRICK)
Block(1,1,-5,NETHER_BRICK)
Block(1,1,-4,GLOWSTONE)
Block(1,1,-3,NETHER_BRICK)
Block(1,1,-2,NETHER_BRICK)
Block(1,1,-1,STAINED_CLAY:14)
Block(1,1,0,STAINED_CLAY:14)
Block(1,1,1,NETHER_BRICK)
Block(1,1,2,NETHER_BRICK)
Block(1,1,3,GLOWSTONE)
Block(1,1,4,NETHER_BRICK)
Block(1,1,5,NETHER_BRICK)
Block(2,0,-5,NETHER_BRICK)
Block(2,0,-4,NETHER_BRICK)
Block(2,0,-3,NETHER_BRICK)
Block(2,0,-2,NETHER_BRICK)
Block(2,0,-1,NETHER_BRICK)
Block(2,0,0,NETHER_BRICK)
Block(2,0,1,NETHER_BRICK)
Block(2,0,2,NETHER_BRICK)
Block(2,0,3,NETHER_BRICK)
Block(2,0,4,NETHER_BRICK)
Block(2,1,-5,NETHER_BRICK)
Block(2,1,-4,GLOWSTONE)
Block(2,1,-3,NETHER_BRICK)
Block(2,1,-2,NETHER_BRICK)
Block(2,1,-1,STAINED_CLAY:14)
Block(2,1,0,STAINED_CLAY:14)
Block(2,1,1,NETHER_BRICK)
Block(2,1,2,NETHER_BRICK)
Block(2,1,3,GLOWSTONE)
Block(2,1,4,NETHER_BRICK)
Block(3,0,-6,NETHER_BRICK)
Block(3,0,-5,NETHER_BRICK)
Block(3,0,-4,NETHER_BRICK)
Block(3,0,-3,NETHER_BRICK)
Block(3,0,-2,NETHER_BRICK)
Block(3,0,-1,NETHER_BRICK)
Block(3,0,0,NETHER_BRICK)
Block(3,0,1,NETHER_BRICK)
Block(3,0,2,NETHER_BRICK)
Block(3,0,3,NETHER_BRICK)
Block(3,0,4,NETHER_BRICK)
Block(3,0,5,NETHER_BRICK)
Block(3,1,-6,NETHER_BRICK)
Block(3,1,-5,NETHER_BRICK)
Block(3,1,-4,NETHER_BRICK)
Block(3,1,-3,GLOWSTONE)
Block(3,1,-2,GLOWSTONE)
Block(3,1,-1,STAINED_CLAY:14)
Block(3,1,0,STAINED_CLAY:14)
Block(3,1,1,GLOWSTONE)
Block(3,1,2,GLOWSTONE)
Block(3,1,3,NETHER_BRICK)
Block(3,1,4,NETHER_BRICK)
Block(3,1,5,NETHER_BRICK)
Block(3,2,-6,NETHER_BRICK)
Block(3,2,5,NETHER_BRICK)
Block(3,3,-6,NETHER_BRICK)
Block(3,3,5,NETHER_BRICK)
Block(3,4,-6,NETHER_BRICK)
Block(3,4,-5,STEP:13)
Block(3,4,4,STEP:13)
Block(3,4,5,NETHER_BRICK)
Block(3,5,-6,NETHER_BRICK_STAIRS:2)
Block(3,5,-5,NETHER_BRICK)
Block(3,5,4,NETHER_BRICK)
Block(3,5,5,NETHER_BRICK_STAIRS:3)
Block(3,6,-5,NETHER_BRICK)
Block(3,6,4,NETHER_BRICK)
Block(3,7,-5,NETHER_BRICK)
Block(3,7,-4,STEP:13)
Block(3,7,3,STEP:13)
Block(3,7,4,NETHER_BRICK)
Block(3,8,-5,NETHER_BRICK_STAIRS:2)
Block(3,8,-4,NETHER_BRICK)
Block(3,8,3,NETHER_BRICK)
Block(3,8,4,NETHER_BRICK_STAIRS:3)
Block(3,9,-4,NETHER_BRICK)
Block(3,9,3,NETHER_BRICK)
Block(3,10,-4,NETHER_BRICK)
Block(3,10,3,NETHER_BRICK)
Block(3,11,-4,STEP:5)
Block(3,11,3,STEP:5)
Block(4,0,-8,NETHER_BRICK)
Block(4,0,-7,NETHER_BRICK)
Block(4,0,-6,NETHER_BRICK)
Block(4,0,-5,NETHER_BRICK)
Block(4,0,-4,NETHER_BRICK)
Block(4,0,-3,NETHER_BRICK)
Block(4,0,-2,NETHER_BRICK)
Block(4,0,-1,NETHER_BRICK)
Block(4,0,0,NETHER_BRICK)
Block(4,0,1,NETHER_BRICK)
Block(4,0,2,NETHER_BRICK)
Block(4,0,3,NETHER_BRICK)
Block(4,0,4,NETHER_BRICK)
Block(4,0,5,NETHER_BRICK)
Block(4,0,6,NETHER_BRICK)
Block(4,0,7,NETHER_BRICK)
Block(4,1,-6,NETHER_BRICK)
Block(4,1,-5,NETHER_BRICK)
Block(4,1,-4,NETHER_BRICK)
Block(4,1,-3,NETHER_BRICK)
Block(4,1,-2,NETHER_BRICK)
Block(4,1,-1,STAINED_CLAY:14)
Block(4,1,0,STAINED_CLAY:14)
Block(4,1,1,NETHER_BRICK)
Block(4,1,2,NETHER_BRICK)
Block(4,1,3,NETHER_BRICK)
Block(4,1,4,NETHER_BRICK)
Block(4,1,5,NETHER_BRICK)
Block(4,2,-6,NETHER_BRICK)
Block(4,2,-5,STAINED_CLAY:1)
Block(4,2,4,STAINED_CLAY:1)
Block(4,2,5,NETHER_BRICK)
Block(4,3,-6,NETHER_BRICK_STAIRS:2)
Block(4,3,-5,STAINED_CLAY:1)
Block(4,3,4,STAINED_CLAY:1)
Block(4,3,5,NETHER_BRICK_STAIRS:3)
Block(4,4,-5,STAINED_CLAY:1)
Block(4,4,-4,STEP:13)
Block(4,4,3,STEP:13)
Block(4,4,4,STAINED_CLAY:1)
Block(4,5,-4,NETHER_BRICK)
Block(4,5,3,NETHER_BRICK)
Block(4,6,-4,NETHER_BRICK)
Block(4,6,3,NETHER_BRICK)
Block(4,7,-4,NETHER_BRICK)
Block(4,7,3,NETHER_BRICK)
Block(4,8,-4,NETHER_BRICK_STAIRS:1)
Block(4,8,3,NETHER_BRICK_STAIRS:1)
Block(5,0,-6,NETHER_BRICK)
Block(5,0,-5,NETHER_BRICK)
Block(5,0,-4,NETHER_BRICK)
Block(5,0,-2,NETHER_BRICK)
Block(5,0,-1,NETHER_BRICK)
Block(5,0,0,NETHER_BRICK)
Block(5,0,1,NETHER_BRICK)
Block(5,0,3,NETHER_BRICK)
Block(5,0,4,NETHER_BRICK)
Block(5,0,5,NETHER_BRICK)
Block(5,1,-5,NETHER_BRICK)
Block(5,1,-4,NETHER_BRICK)
Block(5,1,-2,NETHER_BRICK)
Block(5,1,-1,NETHER_BRICK_STAIRS:1)
Block(5,1,0,NETHER_BRICK_STAIRS:1)
Block(5,1,1,NETHER_BRICK)
Block(5,1,3,NETHER_BRICK)
Block(5,1,4,NETHER_BRICK)
Block(5,2,-5,NETHER_BRICK)
Block(5,2,-4,NETHER_BRICK)
Block(5,2,3,NETHER_BRICK)
Block(5,2,4,NETHER_BRICK)
Block(5,3,-5,NETHER_BRICK_STAIRS:1)
Block(5,3,-4,NETHER_BRICK)
Block(5,3,3,NETHER_BRICK)
Block(5,3,4,NETHER_BRICK_STAIRS:1)
Block(5,4,-4,NETHER_BRICK)
Block(5,4,3,NETHER_BRICK)
Block(5,5,-4,NETHER_BRICK_STAIRS:1)
Block(5,5,3,NETHER_BRICK_STAIRS:1)
Block(6,0,-5,NETHER_BRICK)
Block(6,0,-1,NETHER_BRICK_STAIRS:1)
Block(6,0,0,NETHER_BRICK_STAIRS:1)
Block(6,0,4,NETHER_BRICK)
Block(7,0,-5,NETHER_BRICK)
Block(7,0,4,NETHER_BRICK)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                            BO3 checks                           | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Require a condition at a certain location in order for the BO3 to be spawned.
# BlockCheck(x,y,z,id[:data][,id[:data][,...]]) - one of the blocks must be at the location
# BlockCheckNot(x,y,z,id[:data][,id[:data][,...]]) - all the blocks must not be at the location
# LightCheck(x,y,z,minLightLevel,maxLightLevel) - light must be between min and max (inclusive)
BlockCheckNot(0,-1,0,LAVA)

#######################################################################
# +-----------------------------------------------------------------+ #
# |                             Branches                            | #
# +-----------------------------------------------------------------+ #
#######################################################################

# Branches are objects that will spawn when this object spawns when it is used in
# the CustomStructure resource. Branches can also have branches, making complex
# structures possible. See the wiki for more details.

# Regular Branches spawn each branch with an independent chance of spawning.
# Branch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][IndividualChance])
# branchName - name of the object to spawn.
# rotation - NORTH, SOUTH, EAST or WEST.
# IndividualChance - The chance each branch has to spawn, assumed to be 100 when left blank

# Weighted Branches spawn branches with a dependent chance of spawning.
# WeightedBranch(x,y,z,branchName,rotation,chance[,anotherBranchName,rotation,chance[,...]][MaxChanceOutOf])
# MaxChanceOutOf - The chance all branches have to spawn out of, assumed to be 100 when left blank
